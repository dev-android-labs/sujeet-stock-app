name: Android Build Release [Production]

on:
  push:
    branches: [ "master" ]

permissions:
  contents: write

jobs:

  #  This is job1
  lint:
    name: Checking code using lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew


  #  This is job2
  package:
    name: Release Build
    needs: [ lint ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Release Apk
        run: ./gradlew assembleRelease

      - name: Finding apk path
        id: apk-path
        run: |
          path=$(find **/build/outputs/apk/release -name '*.apk' -type f | head -1)
          echo "::set-output name=path::$path"

      - name: Extracting apk info
        id: apk-info
        uses: hkusu/apk-info-action@v1
        with:
          apk-path: ${{ steps.apk-path.outputs.path }}

      - name: Apk info
        run: |
          echo '${{ steps.apk-path.outputs.path }}'
          echo '${{ steps.apk-info.outputs.application-name }}'
          echo '${{ steps.apk-info.outputs.version-code }}'
          echo '${{ steps.apk-info.outputs.version-name }}'
          echo '${{ steps.apk-info.outputs.min-sdk-version }}'
          echo '${{ steps.apk-info.outputs.readable-file-size }}'

      #Creating Github Release & uploading apk to release
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.apk-info.outputs.version-name }}(${{ steps.apk-info.outputs.version-code }})
          release_name: v${{ steps.apk-info.outputs.version-name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK to Github Release
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.apk-path.outputs.path }}
          asset_name: ${{ steps.apk-info.outputs.application-name }}-${{ steps.apk-info.outputs.version-name }}.apk
          asset_content_type: application/zip

      #Uploading Staging Release apk to artifact
      - name: Upload Apk to artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.apk-info.outputs.application-name }}-${{ steps.apk-info.outputs.version-name }}.apk
          path: app/build/outputs/apk/release/**.apk